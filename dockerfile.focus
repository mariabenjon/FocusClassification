FROM nvidia/cuda:11.3.1-cudnn8-runtime-ubuntu20.04

ARG DEBIAN_FRONTEND=noninteractive

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN rm /etc/apt/sources.list.d/cuda.list
RUN apt-get update \
    && apt-get install -y build-essential wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion \
    && apt-get clean

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.7.12-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy

# Above from commit history of continuumio
# https://github.com/ContinuumIO/docker-images/blob/79af05334630f98aa63cb95dbe59ff7c68fd657c/miniconda3/debian/Dockerfile

WORKDIR /app

RUN conda create --name foci python=3.9
RUN python --version

# Make RUN commands use the new environment:
RUN echo "conda activate foci" >> ~/.bashrc
SHELL ["/bin/bash", "--login", "-c"]

RUN conda install matplotlib -y
RUN conda install numpy -y
RUN conda install scikit-learn -y
RUN conda install scikit-image -y
RUN conda install pandas -y
RUN conda install seaborn -y
RUN conda install -c conda-forge scikit-fmm
RUN conda install Keras -y
RUN conda install Keras-Preprocessing -y
RUN conda install -c conda-forge mahotas
#RUN conda install -c districtdatalabs yellowbric
# Upgrade pip, otherwise opencv install fails.
RUN pip install --upgrade pip
RUN pip install yellowbrick
RUN pip install opencv-contrib-python
RUN pip install opencv-python
RUN conda install -c anaconda nltk
#RUN conda install -c conda-forge tensorflow
# install in $HOME
RUN pip3 install --user --upgrade tensorflow
RUN conda install -c conda-forge read-roi
RUN pip install scikit-multilearn
RUN pip install community
RUN conda install -c conda-forge imbalanced-learn

## Install opencv dependencies normally found in a local computer.
RUN apt-get update
RUN apt-get install ffmpeg libsm6 libxext6  -y
RUN pip3 uninstall -y tensorflow
RUN pip install tensorflow

RUN conda install -c conda-forge umap-learn
RUN conda install -c plotly plotly
RUN conda install -c conda-forge tsne
RUN conda install -c conda-forge datashader
RUN conda install -c bokeh bokeh
RUN conda install -c conda-forge holoviews
RUN conda install -c anaconda colorcet

RUN pip install pacmap

# The code to run when container is started:
COPY entrypoint_focus.sh .
# Make the script executable.
RUN /bin/bash -c 'chmod +x entrypoint_focus.sh'

ENV PATH="root/.local/bin:${PATH}"

ENTRYPOINT ["./entrypoint_focus.sh"]
